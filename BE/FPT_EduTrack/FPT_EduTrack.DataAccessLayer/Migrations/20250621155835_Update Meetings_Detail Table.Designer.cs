// <auto-generated />
using System;
using FPT_EduTrack.DataAccessLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FPT_EduTrack.DataAccessLayer.Migrations
{
    [DbContext(typeof(FptEduTrackContext))]
    [Migration("20250621155835_Update Meetings_Detail Table")]
    partial class UpdateMeetings_DetailTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.Exam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ExaminerId")
                        .HasColumnType("int")
                        .HasColumnName("examiner_id");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Exams__3213E83FFCBF6A48");

                    b.HasIndex("ExaminerId");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.LecturersTestsDetail", b =>
                {
                    b.Property<int>("TestId")
                        .HasColumnType("int")
                        .HasColumnName("test_id");

                    b.Property<int>("LecturerId")
                        .HasColumnType("int")
                        .HasColumnName("lecturer_id");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("reason");

                    b.Property<double?>("Score")
                        .HasColumnType("float")
                        .HasColumnName("score");

                    b.HasKey("TestId", "LecturerId")
                        .HasName("PK__Lecturer__FEB201A960272DB1");

                    b.HasIndex("LecturerId");

                    b.ToTable("Lecturers_Tests_Detail", (string)null);
                });

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.Meeting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("link");

                    b.Property<int?>("MeetingStatusId")
                        .HasColumnType("int")
                        .HasColumnName("meeting_status_id");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Meetings__3213E83FDDFCD55F");

                    b.HasIndex("MeetingStatusId");

                    b.ToTable("Meetings");
                });

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.MeetingDetail", b =>
                {
                    b.Property<int>("MeetingId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MeetingId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("Meetings_Detail", (string)null);
                });

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.MeetingsStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Meetings__3213E83F10968B67");

                    b.ToTable("Meetings_Status", (string)null);
                });

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<bool?>("IsSecond")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_second");

                    b.Property<int?>("ReportStatusId")
                        .HasColumnType("int")
                        .HasColumnName("report_status_id");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("student_id");

                    b.Property<int?>("TestId")
                        .HasColumnType("int")
                        .HasColumnName("test_id");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("PK__Report__3213E83F976C4D9F");

                    b.HasIndex("ReportStatusId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TestId");

                    b.ToTable("Report", (string)null);
                });

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.ReportFeedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ExaminerId")
                        .HasColumnType("int")
                        .HasColumnName("examiner_id");

                    b.Property<string>("Feedback")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("feedback");

                    b.Property<double?>("ReExamScore")
                        .HasColumnType("float")
                        .HasColumnName("re_exam_score");

                    b.Property<int?>("ReportFeedbackStatusId")
                        .HasColumnType("int")
                        .HasColumnName("report_feedback_status_id");

                    b.Property<int?>("ReportId")
                        .HasColumnType("int")
                        .HasColumnName("report_id");

                    b.HasKey("Id")
                        .HasName("PK__Report_F__3213E83F321DE8A4");

                    b.HasIndex("ExaminerId");

                    b.HasIndex("ReportFeedbackStatusId");

                    b.HasIndex("ReportId");

                    b.ToTable("Report_Feedbacks", (string)null);
                });

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.ReportFeedbackStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Report_F__3213E83F98424F8C");

                    b.ToTable("Report_Feedback_Status", (string)null);
                });

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.ReportStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Report_S__3213E83FA0238267");

                    b.ToTable("Report_Status", (string)null);
                });

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Roles__3213E83F8AFA5467");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.Test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("code");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<int?>("ExamId")
                        .HasColumnType("int")
                        .HasColumnName("exam_id");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("link");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("student_id");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("PK__Tests__3213E83F3115D372");

                    b.HasIndex("ExamId");

                    b.HasIndex("StudentId");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.TestsScore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("IsFinal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_final");

                    b.Property<double?>("Score")
                        .HasColumnType("float")
                        .HasColumnName("score");

                    b.Property<int?>("TestId")
                        .HasColumnType("int")
                        .HasColumnName("test_id");

                    b.HasKey("Id")
                        .HasName("PK__Tests_Sc__3213E83F455B4163");

                    b.HasIndex("TestId");

                    b.ToTable("Tests_Score", (string)null);
                });

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("ExpiredRefreshToken")
                        .HasColumnType("datetime")
                        .HasColumnName("expired_refresh_token");

                    b.Property<string>("Fullname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fullname");

                    b.Property<DateTime?>("GoogleAccessTokenExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Google_access_token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Google_refresh_token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("refresh_token");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.HasKey("Id")
                        .HasName("PK__Users__3213E83FAF6D8416");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__AB6E6164A295357C")
                        .IsUnique()
                        .HasFilter("[email] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MeetingUser", b =>
                {
                    b.Property<int>("MeetingsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("MeetingsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("MeetingUser");
                });

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.Exam", b =>
                {
                    b.HasOne("FPT_EduTrack.DataAccessLayer.Entities.User", "Examiner")
                        .WithMany("Exams")
                        .HasForeignKey("ExaminerId")
                        .HasConstraintName("FK__Exams__examiner___5441852A");

                    b.Navigation("Examiner");
                });

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.LecturersTestsDetail", b =>
                {
                    b.HasOne("FPT_EduTrack.DataAccessLayer.Entities.User", "Lecturer")
                        .WithMany("LecturersTestsDetails")
                        .HasForeignKey("LecturerId")
                        .IsRequired()
                        .HasConstraintName("FK__Lecturers__lectu__5EBF139D");

                    b.HasOne("FPT_EduTrack.DataAccessLayer.Entities.Test", "Test")
                        .WithMany("LecturersTestsDetails")
                        .HasForeignKey("TestId")
                        .IsRequired()
                        .HasConstraintName("FK__Lecturers__test___5DCAEF64");

                    b.Navigation("Lecturer");

                    b.Navigation("Test");
                });

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.Meeting", b =>
                {
                    b.HasOne("FPT_EduTrack.DataAccessLayer.Entities.MeetingsStatus", "MeetingStatus")
                        .WithMany("Meetings")
                        .HasForeignKey("MeetingStatusId")
                        .HasConstraintName("FK__Meetings__meetin__797309D9");

                    b.Navigation("MeetingStatus");
                });

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.MeetingDetail", b =>
                {
                    b.HasOne("FPT_EduTrack.DataAccessLayer.Entities.Meeting", "Meeting")
                        .WithMany("MeetingDetails")
                        .HasForeignKey("MeetingId")
                        .IsRequired();

                    b.HasOne("FPT_EduTrack.DataAccessLayer.Entities.User", "User")
                        .WithMany("MeetingDetails")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("Meeting");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.Report", b =>
                {
                    b.HasOne("FPT_EduTrack.DataAccessLayer.Entities.ReportStatus", "ReportStatus")
                        .WithMany("Reports")
                        .HasForeignKey("ReportStatusId")
                        .HasConstraintName("FK__Report__report_s__68487DD7");

                    b.HasOne("FPT_EduTrack.DataAccessLayer.Entities.User", "Student")
                        .WithMany("Reports")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK__Report__student___6754599E");

                    b.HasOne("FPT_EduTrack.DataAccessLayer.Entities.Test", "Test")
                        .WithMany("Reports")
                        .HasForeignKey("TestId")
                        .HasConstraintName("FK__Report__test_id__693CA210");

                    b.Navigation("ReportStatus");

                    b.Navigation("Student");

                    b.Navigation("Test");
                });

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.ReportFeedback", b =>
                {
                    b.HasOne("FPT_EduTrack.DataAccessLayer.Entities.User", "Examiner")
                        .WithMany("ReportFeedbacks")
                        .HasForeignKey("ExaminerId")
                        .HasConstraintName("FK__Report_Fe__exami__70DDC3D8");

                    b.HasOne("FPT_EduTrack.DataAccessLayer.Entities.ReportFeedbackStatus", "ReportFeedbackStatus")
                        .WithMany("ReportFeedbacks")
                        .HasForeignKey("ReportFeedbackStatusId")
                        .HasConstraintName("FK__Report_Fe__repor__71D1E811");

                    b.HasOne("FPT_EduTrack.DataAccessLayer.Entities.Report", "Report")
                        .WithMany("ReportFeedbacks")
                        .HasForeignKey("ReportId")
                        .HasConstraintName("FK__Report_Fe__repor__6FE99F9F");

                    b.Navigation("Examiner");

                    b.Navigation("Report");

                    b.Navigation("ReportFeedbackStatus");
                });

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.Test", b =>
                {
                    b.HasOne("FPT_EduTrack.DataAccessLayer.Entities.Exam", "Exam")
                        .WithMany("Tests")
                        .HasForeignKey("ExamId")
                        .HasConstraintName("FK__Tests__exam_id__5AEE82B9");

                    b.HasOne("FPT_EduTrack.DataAccessLayer.Entities.User", "Student")
                        .WithMany("Tests")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK__Tests__student_i__571DF1D5");

                    b.Navigation("Exam");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.TestsScore", b =>
                {
                    b.HasOne("FPT_EduTrack.DataAccessLayer.Entities.Test", "Test")
                        .WithMany("TestsScores")
                        .HasForeignKey("TestId")
                        .HasConstraintName("FK__Tests_Sco__test___5AEE82B9");

                    b.Navigation("Test");
                });

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.User", b =>
                {
                    b.HasOne("FPT_EduTrack.DataAccessLayer.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__Users__role_id__5070F446");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("MeetingUser", b =>
                {
                    b.HasOne("FPT_EduTrack.DataAccessLayer.Entities.Meeting", null)
                        .WithMany()
                        .HasForeignKey("MeetingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FPT_EduTrack.DataAccessLayer.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.Exam", b =>
                {
                    b.Navigation("Tests");
                });

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.Meeting", b =>
                {
                    b.Navigation("MeetingDetails");
                });

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.MeetingsStatus", b =>
                {
                    b.Navigation("Meetings");
                });

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.Report", b =>
                {
                    b.Navigation("ReportFeedbacks");
                });

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.ReportFeedbackStatus", b =>
                {
                    b.Navigation("ReportFeedbacks");
                });

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.ReportStatus", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.Test", b =>
                {
                    b.Navigation("LecturersTestsDetails");

                    b.Navigation("Reports");

                    b.Navigation("TestsScores");
                });

            modelBuilder.Entity("FPT_EduTrack.DataAccessLayer.Entities.User", b =>
                {
                    b.Navigation("Exams");

                    b.Navigation("LecturersTestsDetails");

                    b.Navigation("MeetingDetails");

                    b.Navigation("ReportFeedbacks");

                    b.Navigation("Reports");

                    b.Navigation("Tests");
                });
#pragma warning restore 612, 618
        }
    }
}
